.apply(function() {
    if (.tmp.object == null) .tmp.object = .Map();
    
    // Returns length/width/thickness/quantity of an object based on type/wearloc
    // Measured in millimeters, used to calculate weight. 1cm3 = 1000mm3
    // A gold ring = 6 x 0.5 x 0.2cm = 0.6cm3 * 19.32g/cm3 = 0.011kg
    // An iron sword is 80cm x 4cm x 1cm = 320cm3 * 7.87g/cm3 = 2.5kg
    // A wooden shield is 90cm x 90cm x 1cm = 8100cm3 = 6kg
    // An iron breastplate is = 50cm x 50cm x 0.2cm x 2 plates = ~1000cm3 = 8kg
    // TO-DO (RUFFINA): Move this to C++ with fenia support
    .tmp.object.dimensions = function(obj) {
	if (obj == null) return;
	var size; size = .Map();
	// Set defaults just in case: some random blob of matter
		    size.length    = 400;
		    size.width     = 400;
		    size.thickness = 10;
		    size.quantity  = 1;        
	
	if  (obj.wear_flags & .tables.wear_flags.wear_about) {
		    size.length    = 680; // long capes and cloaks
		    size.width     = 2000;
		    size.thickness = 1;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_arms) {
		    size.length    = 600; // full arm length sleeves
		    size.width     = 300;
		    size.thickness = 2;
		    size.quantity  = 2;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_body) {
		    size.length    = 500; // height shoulder to hip
		    size.width     = 1500; // chest circumference
		    size.thickness = 2;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_ears) {
		    size.length    = 10;
		    size.width     = 10;
		    size.thickness = 1;
		    size.quantity  = 2;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_face) {
		    size.length    = 180;
		    size.width     = 150;
		    size.thickness = 2;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_feet) {
		    size.length    = 600; // foot length, double
		    size.width     = 350; // foot circumference
		    size.thickness = 2;
		    size.quantity  = 2;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_finger) {
		    size.length    = 60; // finger circumference
		    size.width     = 5;
		    size.thickness = 2;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_float) {
		    size.length    = 250;
		    size.width     = 250;
		    size.thickness = 2;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_hands) {
		    size.length    = 560; // palm length, double
		    size.width     = 250; // palm circumference 
		    size.thickness = 1;  
		    size.quantity  = 2;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_head) {
		    size.length    = 400; // head height
		    size.width     = 700; // head circumference 
		    size.thickness = 3;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.hold) {
		    size.length    = 500; 
		    size.width     = 40;
		    size.thickness = 40;
		    size.quantity  = 1;                
	}  
	else if (obj.wear_flags & .tables.wear_flags.wear_hooves) {
		    size.length    = 280; // ~2x hoof diameter
		    size.width     = 50; // surface width
		    size.thickness = 10;
		    size.quantity  = 4;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_horse) {
		    size.length    = 2000; 
		    size.width     = 2500; 
		    size.thickness = 2;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_legs) {
		    size.length    = 380; 
		    size.width     = 500; // circumference
		    size.thickness = 2;
		    size.quantity  = 2;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_neck) {
	    if (.tmp.object.isElastic(obj)) {
		    size.length    = 400; // short cloaks/shrouds
		    size.width     = 1200; // shoulder circumference
		    size.thickness = 1;
		    size.quantity  = 1;
	    }
	    else {
		    size.length    = 500; // treasure necklace length
		    size.width     = 1;
		    size.thickness = 2;
		    size.quantity  = 1;                
	    }
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_shield) {
		    size.length    = 900; 
		    size.width     = 900;
		    size.thickness = 7;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_waist) {
		    size.length    = 1000; 
		    size.width     = 40;
		    size.thickness = 2;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.wear_wrist) {
		    size.length    = 200; 
		    size.width     = 50;
		    size.thickness = 2;
		    size.quantity  = 1;
	}
	else if (obj.wear_flags & .tables.wear_flags.wield &&
		 .tmp.object.isWeapon(obj)) {
	    if (obj.value0 == .tables.weapon_class.stone) {
		    size.length    = 100; 
		    size.width     = 100;
		    size.thickness = 50;
		    size.quantity  = 1;
	    }
	    if (obj.value0 == .tables.weapon_class.dagger) {
		    size.length    = 400; 
		    size.width     = 30;
		    size.thickness = 10;
		    size.quantity  = 1;
	    }            
	    if (obj.value0 == .tables.weapon_class.mace) {
		    size.length    = 600; 
		    size.width     = 40;
		    size.thickness = 40;
		    size.quantity  = 1;
	    }
	    if (obj.value0 == .tables.weapon_class.arrow) {
		    size.length    = 700; 
		    size.width     = 10;
		    size.thickness = 10;
		    size.quantity  = 1;
	    }
	    if (obj.value0 == .tables.weapon_class.sword) {
		    size.length    = 800; 
		    size.width     = 50;
		    size.thickness = 10;
		    size.quantity  = 1;
	    }
	    if (obj.value0 == .tables.weapon_class.axe) {
		    size.length    = 800; 
		    size.width     = 40;
		    size.thickness = 40;
		    size.quantity  = 1;
	    }
	    if (obj.value0 == .tables.weapon_class.exotic) {
		    size.length    = 800; 
		    size.width     = 40;
		    size.thickness = 40;
		    size.quantity  = 1;
	    }
	    if (obj.value0 == .tables.weapon_class.flail) {
		    size.length    = 1000; 
		    size.width     = 40;
		    size.thickness = 40;
		    size.quantity  = 1;
	    }
	    if (obj.value0 == .tables.weapon_class.whip) {
		    size.length    = 1200; 
		    size.width     = 10;
		    size.thickness = 10;
		    size.quantity  = 1;
	    }
	    if (obj.value0 == .tables.weapon_class.spear) {
		    size.length    = 1500; 
		    size.width     = 50;
		    size.thickness = 50;
		    size.quantity  = 1;
	    }
	    if (obj.value0 == .tables.weapon_class.polearm) {
		    size.length    = 1500; 
		    size.width     = 50;
		    size.thickness = 50;
		    size.quantity  = 1;
	    }
	    
	    // Size of lances and bows is always calculated as if two-handed.
	    // For others it's doubled if two-handed.
	    if (obj.value0 == .tables.weapon_class.bow) {
		    size.length    = 1700; 
		    size.width     = 50;
		    size.thickness = 50;
		    size.quantity  = 1;
	    }
	    else if (obj.value0 == .tables.weapon_class.lance) {
		    size.length    = 3000; 
		    size.width     = 70;
		    size.thickness = 70;
		    size.quantity  = 1;
	    }            
	    else if (obj.hasWeaponFlag("two_hands")) {
		    size.length = size.length * 2;
		    size.width = size.width + size.width / 2;
	    }
		    
	    return size;
	}
	// For items that can't be worn determine size based on the item type
	
	if (obj.item_type == .tables.item_table.light) {
		    size.length    = 400; 
		    size.width     = 700;
		    size.thickness = 1;
		    size.quantity  = 1;                
	}
	else if (obj.item_type == .tables.item_table.scroll) {
		    size.length    = 280; 
		    size.width     = 210;
		    size.thickness = 1;
		    size.quantity  = 1;                
	}
	else if (obj.item_type == .tables.item_table.wand) {
		    size.length    = 500; 
		    size.width     = 40;
		    size.thickness = 40;
		    size.quantity  = 1;                
	}            
	else if (obj.item_type == .tables.item_table.staff) {
		    size.length    = 1500; 
		    size.width     = 40;
		    size.thickness = 40;
		    size.quantity  = 1;                
	}
	else if (obj.item_type == .tables.item_table.lockpick) {
		    size.length    = 100; 
		    size.width     = 30;
		    size.thickness = 30;
		    size.quantity  = 1;                
	}
	else if (obj.item_type == .tables.item_table.keyring) {
		    size.length    = 180; 
		    size.width     = 5;
		    size.thickness = 5;
		    size.quantity  = 1;               
	}
	else if (obj.item_type == .tables.item_table.potion) {
		    size.length    = 200; 
		    size.width     = 100;
		    size.thickness = 1;
		    size.quantity  = 1;               
	}            
	else if (obj.item_type == .tables.item_table.furniture) {
	    if (obj.wear_flags & .tables.wear_flags.take) {
		    size.length    = 1000; // chairs and other movable stuff 
		    size.width     = 1000;
		    size.thickness = 10;
		    size.quantity  = 1;                    
	    }
	    else {
		    size.length    = 2000; 
		    size.width     = 1500;
		    size.thickness = 200;
		    size.quantity  = 1; 			    
	    }
	}
	else if (obj.item_type == .tables.item_table.container) {
	    if (obj.wear_flags & .tables.wear_flags.take) {
		    size.length    = 460; // backpacks etc.
		    size.width     = 1000;
		    size.thickness = 2;
		    size.quantity  = 1;                     
	    }
	    else {
		    size.length    = 1500; // chests and other large stuff
		    size.width     = 2000;
		    size.thickness = 10;
		    size.quantity  = 1;                     
	    }
	}
	else if (obj.item_type == .tables.item_table.drink) {
		    size.length    = 400; 
		    size.width     = 400;
		    size.thickness = 5;
		    size.quantity  = 1;               
	}            
	else if (obj.item_type == .tables.item_table.key) {
		    size.length    = 100; 
		    size.width     = 30;
		    size.thickness = 30;
		    size.quantity  = 1;                
	}
	else if (obj.item_type == .tables.item_table.boat) {
		    size.length    = 2000; 
		    size.width     = 1500;
		    size.thickness = 50;
		    size.quantity  = 1;               
	}
	else if (obj.item_type == .tables.item_table.npc_corpse) {
		    size.length    = 2000; 
		    size.width     = 1500;
		    size.thickness = 300;
		    size.quantity  = 1;               
	}
	else if (obj.item_type == .tables.item_table.npc_corpse) {
		    size.length    = 2000; 
		    size.width     = 1500;
		    size.thickness = 300;
		    size.quantity  = 1;               
	}
	else if (obj.item_type == .tables.item_table.fountain) {
		    size.length    = 2000; 
		    size.width     = 2000;
		    size.thickness = 500;
		    size.quantity  = 1;               
	}
	else if (obj.item_type == .tables.item_table.pill) {
		    size.length    = 20;
		    size.width     = 5;
		    size.thickness = 5;
		    size.quantity  = 1;              
	}
	else if (obj.item_type == .tables.item_table.map) {
		    size.length    = 280; 
		    size.width     = 420;
		    size.thickness = 1;
		    size.quantity  = 1;                
	}        
	else if (obj.item_type == .tables.item_table.portal) {
		    size.length    = 2000;
		    size.width     = 1000;
		    size.thickness = 1;
		    size.quantity  = 1;                     
	}
	else if (obj.item_type == .tables.item_table.warp_stone) {
		    size.length    = 100; 
		    size.width     = 100;
		    size.thickness = 50;
		    size.quantity  = 1;                     
	}
	else if (obj.item_type == .tables.item_table.gem) {
		    size.length    = 40; 
		    size.width     = 40;
		    size.thickness = 20;
		    size.quantity  = 1;                     
	}
	else if (obj.item_type == .tables.item_table.spellbook) {
		    size.length    = 280; 
		    size.width     = 210;
		    size.thickness = 70;
		    size.quantity  = 1;                
	}
	else if (obj.item_type == .tables.item_table.food) {
		    size.length    = 300; 
		    size.width     = 300;
		    size.thickness = 20;
		    size.quantity  = 1;                
	}
	else if (obj.item_type == .tables.item_table.textbook) {
		    size.length    = 280; 
		    size.width     = 210;
		    size.thickness = 70;
		    size.quantity  = 1;                
	} 
	else if (obj.item_type == .tables.item_table.recipe) {
		    size.length    = 280; 
		    size.width     = 210;
		    size.thickness = 1;
		    size.quantity  = 1;                
	}
	else if (obj.item_type == .tables.item_table.parchment) {
		    size.length    = 280; 
		    size.width     = 210;
		    size.thickness = 1;
		    size.quantity  = 1;                
	}		
	else if (obj.item_type == .tables.item_table.tattoo || obj.item_type == .tables.item_table.craft_tattoo) {
		    size.length    = 280; 
		    size.width     = 210;
		    size.thickness = 1;
		    size.quantity  = 1;                
	}
	// treasures, trash, money, food fit into the default dimensions
	// jewelry, clothing etc. always have wearlocs
	
	return size;
    };
})

